[
  {
    "ContainingType": "WeatherApp.API.Controllers.AuthController",
    "Method": "GetUser",
    "RelativePath": "api/Auth/{email}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "email",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "WeatherBackend.Models.RegisterData",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "WeatherApp.API.Controllers.AuthController",
    "Method": "AddFavourite",
    "RelativePath": "api/Auth/favourite",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "city",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "WeatherApp.API.Controllers.AuthController",
    "Method": "GetFavourites",
    "RelativePath": "api/Auth/favourites",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.List\u00601[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "WeatherApp.API.Controllers.AuthController",
    "Method": "Get5DayForecast",
    "RelativePath": "api/Auth/forecast",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "city",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "WeatherApp.API.Controllers.AuthController",
    "Method": "GetWeather",
    "RelativePath": "api/Auth/getWeather/{city}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "city",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "WeatherBackend.Models.WeatherResponse",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "WeatherApp.API.Controllers.AuthController",
    "Method": "HandleGoogleOAuth",
    "RelativePath": "api/Auth/google-oauth",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "tokenData",
        "Type": "WeatherApp.API.Controllers.AuthController\u002BGoogleOAuthToken",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "WeatherApp.API.Controllers.AuthController",
    "Method": "Register",
    "RelativePath": "api/Auth/register",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "data",
        "Type": "WeatherBackend.Models.RegisterData",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "WeatherApp.API.Controllers.AuthController",
    "Method": "RegisterGoogle",
    "RelativePath": "api/Auth/register-Google",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "data",
        "Type": "WeatherBackend.Models.GoogleData",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "WeatherApp.API.Controllers.AuthController",
    "Method": "GetCitySuggestions",
    "RelativePath": "api/Auth/suggest",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "query",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "WeatherApp.API.Controllers.AuthController",
    "Method": "SupabaseLogin",
    "RelativePath": "api/Auth/supabase-login",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "WeatherApp.API.Controllers.AuthController\u002BSupabaseLoginRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "WeatherApp.API.Controllers.AuthController",
    "Method": "SupabaseSignUp",
    "RelativePath": "api/Auth/supabase-signup",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "WeatherApp.API.Controllers.AuthController\u002BSupabaseSignUpRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "WeatherApp.API.Controllers.AuthController",
    "Method": "ValidateToken",
    "RelativePath": "api/Auth/validate",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "WeatherBackend.Controllers.WeatherForecastController",
    "Method": "Get",
    "RelativePath": "WeatherForecast",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[WeatherBackend.WeatherForecast, WeatherBackend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ],
    "EndpointName": "GetWeatherForecast"
  }
]